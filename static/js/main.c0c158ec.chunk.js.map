{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","readyTodos","userId","usersFromServer","find","App","useState","setTitle","selectedUser","setSelectedUser","setTodos","isErrorUserSelect","setErrorUsrSelect","isErrorOnTitle","setErrorOnTitle","onSubmit","event","preventDefault","trim","userName","userToAdd","current","maxToDoId","Math","max","htmlFor","type","value","placeholder","onChange","currentTarget","Alert","severity","disabled","Box","sx","display","flexWrap","m","width","height","padding","Paper","elevation","ReactDOM","render","document","getElementById"],"mappings":"yQAOaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAEED,EAFFC,KACAC,EACEF,EADFE,MAGF,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCLMI,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,UACAR,EAEEM,EAFFN,KACAS,EACEH,EADFG,GAGF,OACE,0BACE,UAASA,EACTN,UAAWO,IACT,WACA,CACE,sBAAuBF,IAL7B,UASE,oBAAIL,UAAU,kBAAd,SAAiCI,IAChCP,GACC,cAAC,EAAD,CAAUA,KAAMA,QCtBXW,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAAST,UAAU,WAAnB,SACGS,EAAMC,KAAI,SAAAP,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKG,UCbL,GACb,CACEA,GAAI,EACJR,KAAM,gBACNa,SAAU,OACVZ,MAAO,qBAET,CACEO,GAAI,EACJR,KAAM,eACNa,SAAU,YACVZ,MAAO,qBAET,CACEO,GAAI,EACJR,KAAM,mBACNa,SAAU,WACVZ,MAAO,sBAET,CACEO,GAAI,EACJR,KAAM,mBACNa,SAAU,WACVZ,MAAO,6BAET,CACEO,GAAI,EACJR,KAAM,mBACNa,SAAU,SACVZ,MAAO,4BAET,CACEO,GAAI,EACJR,KAAM,uBACNa,SAAU,mBACVZ,MAAO,2BAET,CACEO,GAAI,EACJR,KAAM,kBACNa,SAAU,eACVZ,MAAO,0BAET,CACEO,GAAI,EACJR,KAAM,2BACNa,SAAU,gBACVZ,MAAO,wBAET,CACEO,GAAI,EACJR,KAAM,kBACNa,SAAU,WACVZ,MAAO,2BAET,CACEO,GAAI,GACJR,KAAM,qBACNa,SAAU,iBACVZ,MAAO,2BCvCX,IAAMa,ECpBS,CACb,CACEN,GAAI,EACJF,MAAO,qBACPC,WAAW,EACXQ,OAAQ,GAEV,CACEP,GAAI,GACJF,MAAO,kBACPC,WAAW,EACXQ,OAAQ,GAEV,CACEP,GAAI,EACJF,MAAO,qCACPC,WAAW,EACXQ,OAAQ,IDG+BH,KAAI,SAAAP,GAC7C,OAAO,2BACFA,GADL,IAEEN,MAXkBgB,EAWCV,EAAKU,OAVnBC,EAAgBC,MAAK,SAAAlB,GAAI,OAAIA,EAAKS,KAAOO,MAAW,QAD7D,IAAsBA,KAeTG,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOb,EAAP,KAAcc,EAAd,KACA,EAAwCD,mBAAS,IAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAA0BH,mBAASL,GAAnC,mBAAOH,EAAP,KAAcY,EAAd,KACA,EAA+CJ,oBAAS,GAAxD,mBAAOK,EAAP,KAA0BC,EAA1B,KACA,EAA0CN,oBAAS,GAAnD,mBAAOO,EAAP,KAAuBC,EAAvB,KA2CA,OACE,sBAAKzB,UAAU,MAAf,UACE,+CAEA,uBAAMA,UAAU,OAAO0B,SAnCN,SAACC,GAMpB,GALAA,EAAMC,iBAENH,GAAiBrB,EAAMyB,QACvBN,GAAmBJ,GAEE,KAAjBf,EAAMyB,QAAkBV,EAA5B,CAIA,IAtCoBW,EAsCdC,GAtCcD,EAsCaX,EArC5BL,EAAgBC,MAAK,SAAAlB,GAAI,OAAIA,EAAKC,OAASgC,MAAa,MAuC7DT,GAAS,SAAAW,GACP,IAAMC,EAAYC,KAAKC,IAAL,MAAAD,KAAI,YAAQF,EAAQtB,KAAI,SAAAP,GAAI,OAAIA,EAAKG,QAEvD,MAAM,GAAN,mBACK0B,GADL,CAEE,CACE1B,GAAI2B,EAAY,EAChB7B,QACAC,WAAW,EACXQ,OAAQkB,EAAYA,EAAUzB,GAAK,KACnCT,KAAMkC,QAKZb,EAAS,IACTE,EAAgB,MAOd,UACE,sBAAKpB,UAAU,QAAf,UACE,uBACEoC,QAAQ,QACRpC,UAAU,QAFZ,8BAOA,uBACE,UAAQ,aACRqC,KAAK,OACL/B,GAAG,QACHR,KAAK,QACLwC,MAAOlC,EACPmC,YAAY,sBACZC,SA7DgB,SAACb,GACzBT,EAASS,EAAMc,cAAcH,OAC7Bb,GAAgB,MA8DTD,GACC,cAACkB,EAAA,EAAD,CACE1C,UAAU,QACV2C,SAAS,QAFX,qCASJ,sBAAK3C,UAAU,QAAf,UACE,uBACEoC,QAAQ,aACRpC,UAAU,QAFZ,0BAOA,yBACE,UAAQ,aACRM,GAAG,aACHR,KAAK,aACLwC,MAAOnB,EACPnB,UAAU,mBACVwC,SAnFe,SAACb,GACxBP,EAAgBO,EAAMc,cAAcH,OACpCf,GAAkB,IA2EZ,UAQE,wBAAQe,MAAM,GAAGM,UAAQ,EAAzB,2BAEC9B,EAAgBJ,KAAI,SAAAb,GAAI,OACvB,wBAAsByC,MAAOzC,EAAKC,KAAlC,SAAyCD,EAAKC,MAAjCD,EAAKS,UAIrBgB,GACC,cAACoB,EAAA,EAAD,CACE1C,UAAU,QACV2C,SAAS,QAFX,qCASJ,wBACEN,KAAK,SACL,UAAQ,eAFV,oBAQD,IACD,cAACQ,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,SAAU,OACV,kBAAmB,CACjBC,EAAG,EACHC,MAAO,cACPC,OAAQ,OACRC,QAAS,SARf,SAYE,cAACC,EAAA,EAAD,CAAOC,UAAW,GAAlB,SACE,cAAC,EAAD,CAAU7C,MAAOA,YEhK3B8C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c0c158ec.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Alert from '@mui/material/Alert';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction findUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction findUserByName(userName: string): User | null {\n  return usersFromServer.find(user => user.name === userName) || null;\n}\n\nconst readyTodos: Todo[] = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: findUserById(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [todos, setTodos] = useState(readyTodos);\n  const [isErrorUserSelect, setErrorUsrSelect] = useState(false);\n  const [isErrorOnTitle, setErrorOnTitle] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value);\n    setErrorOnTitle(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(event.currentTarget.value);\n    setErrorUsrSelect(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setErrorOnTitle(!title.trim());\n    setErrorUsrSelect(!selectedUser);\n\n    if (title.trim() === '' || !selectedUser) {\n      return;\n    }\n\n    const userToAdd = findUserByName(selectedUser);\n\n    setTodos(current => {\n      const maxToDoId = Math.max(...current.map(todo => todo.id));\n\n      return [\n        ...current,\n        {\n          id: maxToDoId + 1,\n          title,\n          completed: false,\n          userId: userToAdd ? userToAdd.id : null,\n          user: userToAdd,\n        },\n      ];\n    });\n\n    setTitle('');\n    setSelectedUser('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label\n            htmlFor=\"title\"\n            className=\"label\"\n          >\n            Enter your task:\n          </label>\n\n          <input\n            data-cy=\"titleInput\"\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={title}\n            placeholder=\"Enter title of task\"\n            onChange={handleTitleChange}\n          />\n\n          {isErrorOnTitle && (\n            <Alert\n              className=\"error\"\n              severity=\"error\"\n            >\n              Please enter a title\n            </Alert>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"userSelect\"\n            className=\"label\"\n          >\n            Choose user:\n          </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"userSelect\"\n            value={selectedUser}\n            className=\"form-select mb-3\"\n            onChange={handleUserChange}\n          >\n            <option value=\"\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.name}>{user.name}</option>\n            ))}\n          </select>\n\n          {isErrorUserSelect && (\n            <Alert\n              className=\"error\"\n              severity=\"error\"\n            >\n              Please choose a user\n            </Alert>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      {' '}\n      <Box\n        sx={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          '& > :not(style)': {\n            m: 1,\n            width: 'fit-content',\n            height: '100%',\n            padding: '10px',\n          },\n        }}\n      >\n        <Paper elevation={24}>\n          <TodoList todos={todos} />\n\n        </Paper>\n      </Box>\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}